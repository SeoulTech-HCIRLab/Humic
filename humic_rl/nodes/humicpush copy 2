#!/usr/bin/env python3
# -------------------------------
# Humic Object Pushing Task using YCB-Object
# Author: Kim Young Gi(HCIR Lab.)
# Date: 2020. 12. 21
# -------------------------------

""" ROS """
import rospy
import rospkg

""" python Library """
import os
import sys
import time
sys.path.append(os.path.dirname(os.path.abspath(os.path.dirname(__file__))))

""" Environment """
from src.humic_push_env import HumicPushEnv

def main():
    rospy.init_node('humicpush')

    env = HumicPushEnv()
    
    try:
        for episode in range(100):
            if episode == 0:
                init_obj = True
                change_obj = False
            elif episode != 0 and episode % 15 == 0:
                init_obj = False
                change_obj = True
            else:
                init_obj = False
                change_obj = False
            env.reset(init_position=init_obj, change_position=change_obj)
            time.sleep(2)
            for timestep in range(50):
                print("{0} episode, {1} timestep".format(episode+1, timestep+1))
                obs, reward, done, info = env.step(env.action_space.sample())
                rospy.loginfo("Joint Angles:{}".format(obs[:6]))
                rospy.loginfo("Cracker Box Position:{0}, Orientation:{1}".format(obs[6:9], obs[9:12]))
                rospy.loginfo("Sugar Box Position:{0}, Orientation:{1}".format(obs[12:15],obs[15:18]))
                # rospy.loginfo("Soup Can Position:{0}, Orientation:{1}".format(obs[18:21],obs[21:24]))
                # rospy.loginfo("Gelatin Position:{0}, Orientation:{1}".format(obs[24:27],obs[27:30]))
                rospy.loginfo("Reward:{}".format(reward))
                rospy.loginfo("Done:{}".format(done))
                if done:
                    break
    except KeyboardInterrupt:
        print("end")

    rospy.spin()

if __name__ == '__main__':
    main()